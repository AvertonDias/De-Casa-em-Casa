rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // =====================================================================
    //   Funções de Utilidade
    // =====================================================================
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function getUserData(userId) {
        return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isCongregationMember(congregationId) {
        return isSignedIn() && getUserData(request.auth.uid).congregationId == congregationId;
    }

    function isRole(role) {
        return isSignedIn() && getUserData(request.auth.uid).role == role;
    }

    function isAdmin() {
        return isRole('Administrador');
    }

    function isDirigente() {
        return isRole('Dirigente');
    }

    // =====================================================================
    //   Regras para Coleções
    // =====================================================================

    // Coleção de Congregações
    match /congregations/{congregationId} {
      // Qualquer membro autenticado da congregação pode ler os dados dela.
      allow read: if isCongregationMember(congregationId);
      // Apenas administradores podem criar ou atualizar os dados da congregação.
      allow create, update: if isAdmin() && isCongregationMember(congregationId);
      // Ninguém pode deletar uma congregação (segurança).
      allow delete: if false;

      // Subcoleções de Territórios
      match /territories/{territoryId} {
        // Membros da congregação podem ler e escrever nos territórios.
        allow read, write: if isCongregationMember(congregationId) && (isAdmin() || isDirigente());
        allow read: if isCongregationMember(congregationId);

        // Subcoleções de Quadras
        match /quadras/{quadraId} {
            allow read, write: if isCongregationMember(congregationId);

             // Subcoleções de Casas
            match /casas/{casaId} {
                allow read, write: if isCongregationMember(congregationId);
            }
        }
        
        // Histórico de Atividade
        match /activityHistory/{activityId} {
            allow read: if isCongregationMember(congregationId);
            allow create, update, delete: if isCongregationMember(congregationId) && (isAdmin() || isDirigente());
        }
      }
    }

    // Coleção de Usuários
    match /users/{userId} {
      // Um usuário pode criar seu próprio documento (essencial para o cadastro).
      allow create: if request.auth.uid == userId;
      // Um usuário pode ler seu próprio documento.
      allow read: if isUser(userId) || (isAdmin() && isCongregationMember(getUserData(userId).congregationId));
      // Um usuário pode atualizar seu próprio nome. Dirigentes/Admins podem atualizar outros campos.
      allow update: if isUser(userId) || (isCongregationMember(getUserData(userId).congregationId) && (isAdmin() || isDirigente()));
      // Apenas Admins podem deletar outros usuários.
      allow delete: if isAdmin() && isCongregationMember(getUserData(userId).congregationId) && request.auth.uid != userId;
    }
  }
}
