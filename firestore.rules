
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    // Regras para a Coleção de Congregações
    match /congregations/{congId} {
      // QUALQUER UM PODE LER a lista de congregações ou um documento específico.
      // Isso é necessário para a página de cadastro verificar se um número de congregação existe.
      // A informação (nome/número) não é sensível.
      allow read: if true;

      // Apenas administradores podem criar, atualizar ou deletar congregações.
      allow write: if getUserData().role == 'Administrador';

      // Regras para subcoleções de Territórios
      match /territories/{terrId} {
        allow read, write: if getUserData().congregationId == congId;

        match /quadras/{quadraId} {
          allow read, write: if getUserData().congregationId == congId;

          match /casas/{casaId} {
            allow read, write: if getUserData().congregationId == congId;
          }
        }
        
        match /activityHistory/{activityId} {
          allow read, write: if getUserData().congregationId == congId;
        }
      }
    }

    // Regras para a Coleção de Usuários
    match /users/{userId} {
      // Um usuário só pode ler seu próprio documento ou se for admin/dirigente da mesma congregação
      allow get: if request.auth.uid == userId || (getUserData().role in ['Administrador', 'Dirigente'] && getUserData().congregationId == resource.data.congregationId);
      // Admin/Dirigente podem listar todos os usuários da sua congregação
      allow list: if getUserData().role in ['Administrador', 'Dirigente'];

      // Permite que um novo usuário crie seu próprio perfil
      allow create: if request.auth.uid == userId;

      // Permite que o próprio usuário ou um admin/dirigente atualize o perfil
      allow update: if request.auth.uid == userId || getUserData().role in ['Administrador', 'Dirigente'];
      
      // Apenas Admins podem deletar usuários (e não a si mesmos)
      allow delete: if getUserData().role == 'Administrador' && request.auth.uid != userId;
    }
  }
}
