rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // =================================
    //  Funções de Apoio (Helpers)
    // =================================
    
    // Verifica se o usuário está autenticado
    function isUserAuthenticated() {
      return request.auth != null;
    }

    // Verifica se o usuário autenticado é o dono do documento
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Obtém os dados do perfil do usuário autenticado
    function getUserData() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    // Verifica se os dados do usuário já existem (para evitar erros em regras)
    function userDocExists() {
        return exists(/databases/$(database)/documents/users/$(request.auth.uid));
    }

    // Verifica se o usuário pertence a uma congregação específica
    function isSameCongregation(congregationId) {
        return userDocExists() && getUserData().congregationId == congregationId;
    }

    // Verifica se o usuário tem o perfil de Administrador
    function isAdmin() {
        return userDocExists() && getUserData().role == 'Administrador';
    }

    // Verifica se o usuário tem perfil de Dirigente ou Administrador
    function isManager() {
        return userDocExists() && (getUserData().role == 'Administrador' || getUserData().role == 'Dirigente');
    }

    // =================================
    //  Regras de Acesso por Coleção
    // =================================

    // --- Coleção de Congregações ---
    match /congregations/{congId} {
      // Leitura: Qualquer membro autenticado da própria congregação pode ler.
      allow read: if isUserAuthenticated() && isSameCongregation(congId);
      // Escrita: Apenas Admins da própria congregação podem escrever.
      allow write: if isAdmin() && isSameCongregation(congId);
      
      // --- Subcoleção de Territórios ---
      match /territories/{terrId} {
        // Leitura: Qualquer membro autenticado da própria congregação.
        allow read: if isUserAuthenticated() && isSameCongregation(congId);
        // Escrita: Apenas Dirigentes ou Admins da própria congregação.
        allow write: if isManager() && isSameCongregation(congId);

        // --- Subcoleção de Quadras ---
        match /quadras/{quadraId} {
          allow read: if isUserAuthenticated() && isSameCongregation(congId);
          allow write: if isManager() && isSameCongregation(congId);

          // --- Subcoleção de Casas ---
          match /casas/{casaId} {
            allow read: if isUserAuthenticated() && isSameCongregation(congId);
            // Criar/Deletar: Apenas Dirigentes ou Admins.
            allow create, delete: if isManager() && isSameCongregation(congId);
            // Atualizar: Qualquer membro da congregação pode (para marcar como feita).
            allow update: if isUserAuthenticated() && isSameCongregation(congId);
          }
        }
        
        // --- Subcoleção de Histórico de Atividade ---
        match /activityHistory/{activityId} {
            allow read: if isUserAuthenticated() && isSameCongregation(congId);
            allow write: if isManager() && isSameCongregation(congId);
        }
      }
    }

    // --- Coleção de Usuários ---
    match /users/{userId} {
      // Regra crucial para o cadastro:
      // Permite que um usuário autenticado crie SEU PRÓPRIO documento de perfil.
      allow create: if isOwner(userId);

      // Leitura: O usuário pode ler seu próprio perfil. Admins podem ler perfis da mesma congregação.
      allow read: if isOwner(userId) || (isAdmin() && isSameCongregation(get(/databases/$(database)/documents/users/$(userId)).data.congregationId));
      
      // Atualização: O usuário pode atualizar seu próprio perfil. Admins e Dirigentes podem atualizar outros perfis na mesma congregação.
      allow update: if isOwner(userId) || (isManager() && isSameCongregation(get(/databases/$(database)/documents/users/$(userId)).data.congregationId));
      
      // Exclusão: Apenas Admins podem deletar outros usuários da mesma congregação (e não a si mesmos).
      allow delete: if isAdmin() && request.auth.uid != userId && isSameCongregation(get(/databases/$(database)/documents/users/$(userId)).data.congregationId);
    }
  }
}
