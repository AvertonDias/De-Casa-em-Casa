rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    function isUserAdmin(userId) {
        return isUserAuthenticated() && getUserRole(userId) == 'Administrador';
    }

    function userCongregationId(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.congregationId;
    }
    
    function isSameCongregation(congregationId) {
        return isUserAuthenticated() && userCongregationId(request.auth.uid) == congregationId;
    }
    
    function canManageUsers() {
      let userRole = getUserRole(request.auth.uid);
      return userRole == 'Administrador' || userRole == 'Dirigente';
    }


    // Allow public creation of congregations
    match /congregations/{congregationId} {
      allow read: if isUserAuthenticated() && isSameCongregation(congregationId);
      allow create: if true; // Public can create, secured by Cloud Function
      allow update: if isUserAuthenticated() && isUserAdmin(request.auth.uid) && isSameCongregation(congregationId);
    }
    
    // User collection rules
    match /users/{userId} {
      // 1. A user can create their own user document.
      allow create: if isOwner(userId);
      // 2. A user can read/update their own profile. Admins/Dirigentes of the same congregation can also read/update.
      allow read, update: if (isOwner(userId)) || (isSameCongregation(get(/databases/$(database)/documents/users/$(userId)).data.congregationId) && canManageUsers());
      // 3. Only an admin of the same congregation (and not the user themselves) can delete a user.
      allow delete: if isUserAdmin(request.auth.uid) && isSameCongregation(get(/databases/$(database)/documents/users/$(userId)).data.congregationId) && !isOwner(userId);
    }

    // Territories and subcollections
    match /congregations/{congregationId}/{document=**} {
      allow read: if isUserAuthenticated() && isSameCongregation(congregationId);
      allow write: if isUserAuthenticated() && isSameCongregation(congregationId) && canManageUsers();
    }
  }
}
