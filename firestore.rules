rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions for concise rules
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function getRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isRole(role) {
      return isUserAuthenticated() && getRole() == role;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow user creation ONLY if the user is creating their own document.
      allow create: if isUserAuthenticated() && request.auth.uid == userId;

      // Allow a user to read their own profile.
      allow get: if isUserAuthenticated() && request.auth.uid == userId;

      // Allow Admins and Overseers to list all users in their congregation.
      allow list: if isRole('Administrador') || isRole('Dirigente');

      // Allow a user to update their own profile.
      // Allow Admins to update any user profile.
      allow update: if isUserAuthenticated() && (request.auth.uid == userId || isRole('Administrador'));

      // Allow only Admins to delete users.
      allow delete: if isRole('Administrador');
    }

    // Rules for data within a specific congregation
    match /congregations/{congregationId}/{document=**} {
      // Deny all access by default if the user is not authenticated
      // or doesn't belong to this congregation.
      allow read, write: if false; 
    }
     match /congregations/{congregationId} {
      // Any authenticated user can read the congregation list to find their own.
      allow list: if isUserAuthenticated();
      // Allow reading a specific congregation document if the user belongs to it.
      allow get: if isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.congregationId == congregationId;

      // Allow only Admins to update congregation data.
      allow update: if isRole('Administrador') && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.congregationId == congregationId;
      
      // Default deny for create/delete
      allow create, delete: if false;
    }


    match /congregations/{congregationId}/territories/{territoryId} {
       allow read, list: if isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.congregationId == congregationId;
       allow create, update, delete: if (isRole('Administrador') || isRole('Dirigente')) && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.congregationId == congregationId;
    }

    match /congregations/{congregationId}/territories/{territoryId}/{subcollection}/{docId} {
       allow read, list: if isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.congregationId == congregationId;
       allow create, update, delete: if isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.congregationId == congregationId;
    }
  }
}
